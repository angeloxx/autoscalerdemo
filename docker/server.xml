<server description="new server">

    <!-- Enable features -->
    <featureManager>
        <feature>javaee-7.0</feature>
        <feature>localConnector-1.0</feature>
    	<feature>servlet-3.1</feature>
		<feature>monitor-1.0</feature>
		<feature>ejbLite-3.2</feature>
		<feature>ejbPersistentTimer-3.2</feature>
		
		<feature>restConnector-2.0</feature>
		<feature>usr:prometheusExporter-1.0</feature>
	</featureManager>


	<prometheusExporter lowercaseOutputLabelNames="true" lowercaseOutputName="true" path="/" startDelaySeconds="1">
        <connection addIdentificationLabels="true" baseURL="http://localhost:9081" includeMemberMetrics="true"/>
        <rule attrNameSnakeCase="true" help="Some help text" name="os_metric_$1" pattern="java.lang{type=OperatingSystem}{}(.*):" valueFactor="1" />
        <rule attrNameSnakeCase="true" help="BananaShopMetrics" name="bananashop_metric_$1" pattern="com.angeloxx.bananashop{type=CounterMBean}{}(.*):" />
        <rule attrNameSnakeCase="true" help="Liberty metric" name="wlp_metric_$1" pattern="WebSphere(.*):" valueFactor="1" />
    </prometheusExporter>

 <dataSource id="DefaultDataSource" jdbcDriverRef="DerbyEmbedded">
     <properties.derby.embedded createDatabase="create" databaseName="${server.config.dir}/data/EJBTimerDB"/>
 </dataSource>
 <jdbcDriver id="DerbyEmbedded" libraryRef="DerbyLib"/>
 <library id="DerbyLib">
     <file name="${shared.resource.dir}/derby/derby.jar"/>
 </library>
  <!-- 
   <databaseStore createTables="true" dataSourceRef="DefaultDataSource"/>
   <dataSource id="DefaultDataSource" jndiName="jdbc/sessionDb" type="javax.sql.DataSource">
    <jdbcDriver
        javax.sql.ConnectionPoolDataSource="org.h2.jdbcx.JdbcDataSource"
        javax.sql.DataSource="org.h2.jdbcx.JdbcDataSource"
        javax.sql.XADataSource="org.h2.jdbcx.JdbcDataSource"
        libraryRef="SharedLibrary_H2"/>     

     <properties URL="jdbc:h2:~/db;AUTO_SERVER=TRUE" password="sa" user="sa"/>
   </dataSource>
       <library id="SharedLibrary_H2">
         <fileset dir="${shared.resource.dir}/" id="Fileset_H2"/>
       </library>   
    -->
    <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->
    
    <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
         encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
         Then uncomment the keyStore element. -->
    <!--
    <keyStore password=""/> 
    -->
    
    <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
        basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password, 
        generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element. 
        Then uncomment the user element. -->
    <basicRegistry id="basic" realm="BasicRealm"> 
        <!-- <user name="yourUserName" password="" />  --> 
    </basicRegistry>
    
    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint  host="*" httpPort="9080" httpsPort="9443" id="defaultHttpEndpoint"/>
                  
    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>


    <applicationMonitor updateTrigger="mbean"/>

    <keyStore id="defaultKeyStore" password="{xor}Lz4sLCgwLTs="/>





    <webApplication id="bananaShop" location="bananaShop.war" name="bananaShop"/>
</server>